@model RenewalSettingsViewModel
@using OrganiMedCore.DiabetesCareCenter.Core.ViewModels
@using IntelliMed.Core.Extensions

<h1>@T["Megújítási időszak kezelése"] - @T[Model.Id.HasValue ? "szerkesztés" : "új felvétele"]</h1>
<hr />

@Html.ValidationSummary()

<div class="d-flex my-5 justify-content-center" id="renewal-period-loading">
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<form asp-area="OrganiMedCore.DiabetesCareCenterManager"
      asp-controller="CenterSettingsRenewalPeriod"
      asp-action="Edit"
      id="renewal-period-editor"
      class="d-none">
    <input type="hidden" asp-for="Id" />

    <div class="card mb-3">
        <div class="card-header">
            <h4>@T["Időszak megadása"]</h4>
        </div>
        <div class="card-body">
            <div class="row form-group">
                <label asp-for="RenewalStartDate" class="col-12 col-for-label">@T["Megújítási időszak kezdete"]</label>
                <div class="col-md-9 col-lg-7 col-xl-5">
                    <div class="input-group">
                        <input class="form-control" type="date" v-model="renewalStartDate" />
                        <input class="form-control" type="time" v-model="renewalStartTime" />
                        <input asp-for="RenewalStartDate" class="form-control" type="hidden" :value="renewal" />
                    </div>
                    <span asp-validation-for="RenewalStartDate" class="col-12 text-danger"></span>
                </div>
            </div>

            <div class="row form-group">
                <label asp-for="ReviewStartDate" class="col-12 col-for-label">@T["Ellenőrzési időszak kezdete"]</label>
                <div class="col-md-9 col-lg-7 col-xl-5">
                    <div class="input-group">
                        <input class="form-control" type="date" v-model="reviewStartDate" />
                        <input class="form-control" type="time" v-model="reviewStartTime" />
                        <input asp-for="ReviewStartDate" class="form-control" type="hidden" :value="reviewStart" />
                    </div>
                    <span asp-validation-for="ReviewStartDate" class="col-12 text-danger"></span>
                </div>
            </div>

            <div class="row form-group">
                <label asp-for="ReviewEndDate" class="col-12 col-for-label">@T["Ellenőrzési időszak vége"]</label>
                <div class="col-md-9 col-lg-7 col-xl-5">
                    <div class="input-group">
                        <input class="form-control" type="date" v-model="reviewEndDate" />
                        <input class="form-control" type="time" v-model="reviewEndTime" />
                        <input asp-for="ReviewEndDate" class="form-control" type="hidden" :value="reviewEnd" />
                    </div>
                    <span asp-validation-for="ReviewEndDate" class="col-12 text-danger"></span>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-3">
        <div class="card-header">
            <h4>
                @T["Email-ek időzítése"]
            </h4>
        </div>
        <div class="card-body d-none" id="email-timings-editor">
            <button type="button" class="btn btn-outline-success mb-3" @@click="addTiming()">
                <i class="fas fa-plus"></i>
                @T["Hozzáad"]
            </button>

            <div class="row form-group" v-for="(timing, index) in timings" v-bind:key="timing.id">
                <label class="col-12 col-for-label" :for="'timing-' + timing.id">@T["Dátum"]</label>
                <div class="col-md-10 col-lg-8 col-xl-6">
                    <div class="input-group">
                        <input :id="'timing-' + timing.id"
                               class="form-control w-50"
                               type="date"
                               v-model="timing.date"
                               :readonly="timing.sent" />

                        <input class="form-control w-25"
                               type="time"
                               v-model="timing.time"
                               :readonly="timing.sent" />

                        <input type="hidden" :value="getDateFormat(timing.date, timing.time)" :name="'EmailTimings['+index+']'" />

                        <div class="input-group-append">
                            <button type="button" class="btn btn-danger" @@click="removeTiming(timing.id)" v-if="!timing.sent">
                                <i class="fas fa-trash"></i>
                            </button>

                            <span class="btn btn-outline-danger disabled" v-if="timing.sent">
                                <i class="fas fa-trash"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-12 text-muted" v-if="timing.sent">
                    @T["Feldolgozva"]
                </div>
            </div>

            <div class="row" v-if="processedTimings.length">
                <div class="col">
                    <p>
                        @T["Az alábbi időpontokhoz tartozó értesítés már fel lett dolgozva"]:
                    </p>
                    <ul>
                        <li v-for="(datetime, index) in processedTimings" v-bind:key="index">
                            {{ datetime }}
                        </li>
                    </ul>
                </div>
            </div>

            <p class="alert alert-info m-0">
                @T["Az email szövegét a sablonok szerkesztésénél lehet megadni."]
            </p>

            <p class="alert alert-secondary mt-3" v-show="!timings.length">
                @T["Nincs egyetlen időpont sem."]
            </p>
        </div>
    </div>

    <div class="text-right">
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-save"></i>
            @T["Mentés"]
        </button>

        <a asp-area="OrganiMedCore.DiabetesCareCenterManager"
           asp-controller="CenterSettingsRenewalPeriod"
           asp-action="Index"
           class="btn btn-secondary">
            @T["Mégsem"]
        </a>
    </div>
</form>

<script at="Foot" asp-name="Moment"></script>
<script at="Foot" asp-name="Vue"></script>
<script at="Foot">
    new Vue({
        el: '#renewal-period-editor',
        data() {
            return {
                renewalStartDate: null,
                renewalStartTime: null,
                reviewStartDate: null,
                reviewStartTime: null,
                reviewEndDate: null,
                reviewEndTime: null,
                timings: [],
                processedTimings: [],
                nextId: 0
            };
        },
        methods: {
            addTiming() {
                this.timings.push({
                    date: null,
                    time: '00:00',
                    id: this.nextId++
                });
            },
            removeTiming(id) {
                if (!confirm('@T["Biztos benne?"]'))
                {
                    return;
                }

                this.timings = this.timings.filter(function(x) {
                    return x.id != id;
                });
            },
            getDateFormat(inputDate, inputTime) {
                if (!inputDate) {
                    return;
                }

                var date = inputDate + "T" + (inputTime || "00:00");

                // "2014-09-08T08:02:17-05:00" (ISO 8601, no fractional seconds)
                // https://momentjs.com/docs/#/displaying/format/
                return moment(new Date(date)).format();
            }
        },
        computed: {
            renewal() {
                return this.getDateFormat(this.renewalStartDate, this.renewalStartTime);
            },
            reviewStart() {
                return this.getDateFormat(this.reviewStartDate, this.reviewStartTime);
            },
            reviewEnd() {
                return this.getDateFormat(this.reviewEndDate, this.reviewEndTime);
            }
        },
        mounted() {
            document.getElementById('email-timings-editor').classList.remove('d-none');
            @if (Model.RenewalStartDate.HasValue)
            {
                @:var renewal = moment(new Date('@Model.RenewalStartDate.Value.ToString("r")'));
                @:this.renewalStartDate = renewal.format('YYYY-MM-DD');
                @:this.renewalStartTime = renewal.format('HH:mm');
            }

            @if (Model.ReviewStartDate.HasValue)
            {
                @:var reviewStart = moment(new Date('@Model.ReviewStartDate.Value.ToString("r")'));
                @:this.reviewStartDate = reviewStart.format('YYYY-MM-DD');
                @:this.reviewStartTime = reviewStart.format('HH:mm');
            }

            @if (Model.ReviewEndDate.HasValue)
            {
                @:var reviewEnd = moment(new Date('@Model.ReviewEndDate.Value.ToString("r")'));
                @:this.reviewEndDate = reviewEnd.format('YYYY-MM-DD');
                @:this.reviewEndTime = reviewEnd.format('HH:mm');
            }

            @foreach (var timing in Model.EmailTimings.OrderBy(x => x))
            {
                @:var date = moment(new Date('@timing.ToString("r")'));
                @:this.timings.push({ date: date.format('YYYY-MM-DD'), time: date.format('HH:mm'), id: this.nextId++, sent: @(Model.ProcessedTimings.Any(x => x == timing) ? "true" : "false") });
            }

            @foreach (var timing in Model.ProcessedTimings.OrderBy(x => x))
            {
                @:this.processedTimings.push(moment(new Date('@timing.ToString("r")')).format('YYYY-MM-DD HH:mm'));
            }

            document.getElementById('renewal-period-loading').classList.add('d-none');
            document.getElementById('renewal-period-loading').classList.remove('d-flex');

            document.getElementById('renewal-period-editor').classList.remove('d-none');
        }
    });
</script>
