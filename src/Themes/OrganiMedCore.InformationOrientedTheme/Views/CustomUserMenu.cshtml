@using Microsoft.AspNetCore.Authorization
@using IntelliMed.Core.Services
@inject IAuthorizationService authorizationService
@inject IBetterUserService betterUserService

<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown">
                <i class="fa fa-user fa-fw"></i>
                @((await betterUserService.GetCurrentUserAsync()).Email)
                <b class="caret"></b>
            </a>
            <div class="dropdown-menu user-dropdown-menu">
                @if (await authorizationService.AuthorizeAsync(User, OrchardCore.Admin.Permissions.AccessAdminPanel))
                {
                    <a class="dropdown-item" asp-route-area="OrchardCore.Admin" asp-controller="Admin" asp-action="Index">
                        <i class="fa fa-desktop fa-fw"></i> @T["Admin felszín"]
                    </a>
                }
                @*<a class="dropdown-item" asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="ChangePassword">
                        <i class="fa fa-lock fa-fw"></i> @T["Jelszó megváltoztatása"]
                  </a>*@
                @*<a class="dropdown-item" asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="ExternalLogins"><i class="fa fa-user-lock fa-fw"></i> @T["External Logins"]</a>*@
                <form class="form-inline" asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="LogOff" method="post">
                    <button type="submit" class="btn btn-link navbar-btn dropdown-item">
                        <i class="fa fa-sign-out-alt fa-fw"></i> @T["Kijelentkezés"]
                    </button>
                </form>
            </div>
        </li>
    }
    else
    {
        @await DisplayAsync(await New.LoginNavMenuItem())
    }
</ul>